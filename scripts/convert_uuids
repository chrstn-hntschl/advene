#! /usr/bin/env python3
#
#
# Advene: Annotate Digital Videos, Exchange on the NEt
# Copyright (C) 2019 Olivier Aubert <contact@olivieraubert.net>
#
# This file is part of Advene.
#
# Advene is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Advene is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Foobar; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

import logging
logger = logging.getLogger(__name__)

"""Convert annotation ids to uuids
"""
import os
import sys
import uuid

try:
    import advene.core.config as config
except ImportError:
    # Try to set path
    (maindir, subdir) = os.path.split(os.path.dirname(os.path.abspath(sys.argv[0])))
    if subdir == 'scripts':
        # Chances are that we were in a development tree...
        libpath = os.path.join(maindir, "lib")
        sys.path.insert(0, libpath)
        import advene.core.config as config
        config.data.fix_paths(maindir)

from advene.model.package import Package

if __name__ == '__main__':
    logging.basicConfig(level=logging.DEBUG)
    SYNTAX = "%s original.azp destination.azp" % sys.argv[0]
    try:
        source_file = sys.argv[1]
        dest_file = sys.argv[2]
    except IndexError:
        logger.error(SYNTAX)
        sys.exit(1)

    source = Package(source_file)

    for a in source.annotations:
        a.id = str(uuid.uuid1())

    logger.info("Convert %s into %s", source_file, dest_file)
    source.save(dest_file)
